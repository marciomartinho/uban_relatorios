/**
 * M√≥dulo de API
 * Gerencia todas as chamadas AJAX para o backend
 */

class ApiBalancoReceita {
    constructor() {
        this.config = window.ConfiguracoesBalancoReceita;
        this.endpoints = this.config.API;
    }
    
    /**
     * Carrega os filtros dispon√≠veis
     * @returns {Promise} Promessa com os dados dos filtros
     */
    carregarFiltros() {
        console.log('API: Carregando filtros...');
        
        return $.ajax({
            url: this.endpoints.FILTROS,
            method: 'GET',
            error: (xhr) => {
                console.error('‚ùå Erro ao carregar filtros:', xhr);
                throw new Error('Erro ao carregar filtros');
            }
        });
    }
    
    /**
     * Gera o relat√≥rio com base nos par√¢metros
     * @param {Object} parametros - Par√¢metros do relat√≥rio (ano, mes, coug, tipo_receita)
     * @returns {Promise} Promessa com os dados do relat√≥rio
     */
    gerarRelatorio(parametros) {
        console.log('ü¶Ü API: Gerando relat√≥rio:', parametros);
        
        return $.ajax({
            url: this.endpoints.GERAR_RELATORIO,
            method: 'GET',
            data: parametros,
            error: (xhr) => {
                console.error('‚ùå Erro ao gerar relat√≥rio:', xhr);
                let mensagemErro = 'Erro ao gerar relat√≥rio';
                if (xhr.responseJSON && xhr.responseJSON.erro) {
                    mensagemErro += ': ' + xhr.responseJSON.erro;
                }
                throw new Error(mensagemErro);
            }
        });
    }
    
    /**
     * Carrega lan√ßamentos de uma UG espec√≠fica
     * @param {Object} parametros - Par√¢metros para buscar lan√ßamentos
     * @returns {Promise} Promessa com os dados dos lan√ßamentos
     */
    carregarLancamentos(parametros) {
        console.log('API: Carregando lan√ßamentos:', parametros);
        
        return $.ajax({
            url: this.endpoints.LANCAMENTOS,
            method: 'GET',
            data: parametros,
            error: (xhr) => {
                console.error('‚ùå Erro ao carregar lan√ßamentos:', xhr);
                let mensagemErro = 'Erro ao carregar lan√ßamentos';
                if (xhr.responseJSON && xhr.responseJSON.erro) {
                    mensagemErro += ': ' + xhr.responseJSON.erro;
                }
                throw new Error(mensagemErro);
            }
        });
    }
}

// Exportar inst√¢ncia √∫nica (Singleton)
window.ApiBalancoReceita = new ApiBalancoReceita();